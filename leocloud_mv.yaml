apiVersion: apps/v1
kind: Deployment
metadata:
  name: music-db-deployment
  namespace: student-a-hartl1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: musicdatabase 
  template:
    metadata:
      labels:
        app: musicdatabase
    spec:
      containers:
        - name: musicdatabase
          image: postgres 
          ports:
            - containerPort: 5432
              name: "postgres"
          env: 
            - name: POSTGRES_DB
              value: db 
            - name: POSTGRES_USER
              value: app 
            - name: POSTGRES_PASSWORD
              value: app 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: music-frontend-deployment
  namespace: student-a-hartl1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: music-frontend
  template:
    metadata:
      labels:
        app: music-frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/musicvoting/musicvotingv3-frontend:latest
          ports:
            - containerPort: 80
          imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: music-backend-deployment
  namespace: student-a-hartl1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: music-backend
  template:
    metadata:
      labels:
        app: music-backend
    spec:
      containers:
        - name: music-backend
          image: ghcr.io/musicvoting/musicvotingv3-server:latest
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: music-frontend-svc
  namespace: student-a-hartl1
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: music-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: music-backend-svc
  namespace: student-a-hartl1
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: music-backend
---
apiVersion: v1
kind: Service
metadata:
  name: music-database-svc
  namespace: student-a-hartl1
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: musicdatabase 
  selector:
    app: musicdatabase
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress-mv
  namespace: student-a-hartl1
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: student.cloud.htl-leonding.ac.at
      http:
        paths:
          - path: /a.hartl1/music-voting/api(/|$)(.*)$
            pathType: Prefix
            backend:
              service:
                name: music-backend-svc
                port:
                  number: 80
          - path: /a.hartl1/music-voting(/|$)(.*)$
            pathType: Prefix
            backend:
              service:
                name: music-frontend-svc
                port:
                  number: 80   
